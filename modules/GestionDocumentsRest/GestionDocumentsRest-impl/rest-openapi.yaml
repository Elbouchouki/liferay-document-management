info:
  description: "GestionDocumentsRest REST API"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  title: "GestionDocumentsRest"
  version: v1.0
openapi: 3.0.1
components:
  schemas:
    Document:
      type: object
      properties:
        fileEntryId:
          type: integer
          format: int64
        groupId:
          type: integer
          format: int64
        companyId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        repositoryId:
          type: integer
          format: int64
        folderId:
          type: integer
          format: int64
        name:
          type: string
        fileName:
          type: string
        mimeType:
          type: string
        title:
          type: string
        description:
          type: string
        fileEntryTypeId:
          type: integer
          format: int64
        fileEntryTypeIdName:
          type: string
        size:
          type: integer
          format: int64
        version:
          type: string
        createDate:
          type: string
          format: date-time
        modifiedDate:
          type: string
          format: date-time
        changeLog:
          type: string
        type:
          type: string
          enum: [ "POA", "POI" ]
        address:
          type: string
        city:
          type: string
        tags:
          type: array
          items:
            type: string

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        fieldErrors:
          type: array
          items:
            type: string
    DocumentRequest:
      type: object
      properties:
        title:
          type: string
        city:
          type: string
        description:
          type: string
        address:
          type: string
        type:
          type: string
          enum:
            - "POA"
            - "POI"
        tags:
          type: array
          items:
            type: string
        items:
          type: string
        filename:
          type: string
        file:
          type: string
          format: binary
      required: [ "title", "city", "address", "type", "file" ]
paths:
  "/document":
    post:
      operationId: createDocument
      summary: "Create a document"
      tags: [ "Document" ]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DocumentRequest"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  "/document/{documentId}":
    get:
      operationId: getDocument
      summary: "Get a document"
      tags: [ "Document" ]
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    put:
      operationId: updateDocument
      summary: "Update a document"
      tags: [ "Document" ]
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/DocumentRequest"
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      operationId: deleteDocument
      summary: "Delete a document"
      tags: [ "Document" ]
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/document/{documentId}/history":
    get:
      operationId: getDocumentHistory
      summary: "Get a document history"
      tags: [ "Document" ]
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"

        404:
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  "/documents":
    get:
      operationId: getDocuments
      summary: "Get documents"
      tags: [ "Document" ]
      parameters:
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: tags
          in: query
          required: false
          schema:
            type: array
            items:
              type: string

      responses:
        200:
          description: "OK"
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Document"
                  - $ref: "#/components/schemas/ErrorResponse"

        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
            application/xml:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
